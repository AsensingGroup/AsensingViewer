diff -Nr -U5 qt-everywhere-opensource-src-4.8.6/src/3rdparty/webkit/Source/WebKit.pri qt-everywhere-opensource-src-4.8.6.webkit-gcc-4.1/src/3rdparty/webkit/Source/WebKit.pri
--- qt-everywhere-opensource-src-4.8.6/src/3rdparty/webkit/Source/WebKit.pri	2014-04-10 14:37:12.000000000 -0400
+++ qt-everywhere-opensource-src-4.8.6.webkit-gcc-4.1/src/3rdparty/webkit/Source/WebKit.pri	2015-12-02 12:42:18.563725222 -0500
@@ -100,11 +100,12 @@
 CONFIG -= warn_on
 *-g++*:QMAKE_CXXFLAGS += -Wall -Wextra -Wreturn-type -fno-strict-aliasing -Wcast-align -Wchar-subscripts -Wformat-security -Wreturn-type -Wno-unused-parameter -Wno-sign-compare -Wno-switch -Wno-switch-enum -Wundef -Wmissing-noreturn -Winit-self
 
 # Treat warnings as errors on x86/Linux/GCC
 linux-g++* {
-    !CONFIG(standalone_package):if(isEqual(QT_ARCH,x86_64)|isEqual(QT_ARCH,i386)): QMAKE_CXXFLAGS += -Werror
+    # Overcome error on i386 with older GCC (4.1 or so).
+    #!CONFIG(standalone_package):isEqual(QT_ARCH,x86_64)|isEqual(QT_ARCH,i386): QMAKE_CXXFLAGS += -Werror
 
     greaterThan(QT_GCC_MAJOR_VERSION, 3):greaterThan(QT_GCC_MINOR_VERSION, 5) {
         if (!contains(QMAKE_CXXFLAGS, -std=c++0x) && !contains(QMAKE_CXXFLAGS, -std=gnu++0x)) {
             # We need to deactivate those warnings because some names conflicts with upcoming c++0x types (e.g.nullptr).
             QMAKE_CFLAGS_WARN_ON += -Wno-c++0x-compat
